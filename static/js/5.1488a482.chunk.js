(this.webpackJsonpsolarsystem=this.webpackJsonpsolarsystem||[]).push([[5],{68:function(t,e,n){"use strict";n.r(e);var o=n(12),r=n(11),a=n(5),i=n(1),s=n(2),c=n(3),l=n(4),u=n(16);var d=function(t){Object(c.a)(n,t);var e=Object(l.a)(n);function n(){return Object(i.a)(this,n),e.call(this,{vertexColors:!0,depthWrite:!1,blending:r.AdditiveBlending,uniforms:{uSize:{value:30},uTime:{value:0}},vertexShader:"\n    uniform float uSize;\n    uniform float uTime;\n\n    varying vec3 vColor;\n\n    attribute float aScale;\n    attribute vec3 aRandomness;\n    \n\n    float PI = 3.14159265359;\n    void main() {\n      /**\n       * Position\n       */\n      vec4 modelPosition  = modelMatrix * vec4(position, 1.0);\n\n      // Spin\n      float angle = atan(modelPosition.x, modelPosition.z);\n      float distanceToCenter = length(modelPosition.xz);\n      float angleOffet = (1.0 / distanceToCenter) * uTime * 0.2;\n      angle += angleOffet;\n      modelPosition.x = cos(angle) * distanceToCenter;\n      modelPosition.z = sin(angle) * distanceToCenter;\n      \n      //Randomness\n      modelPosition.xyz += aRandomness;\n \n\n      vec4 viewPosition = viewMatrix * modelPosition;\n      vec4 projectedPosition = projectionMatrix * viewPosition;\n      gl_Position = projectedPosition;\n      /**\n       * Size\n       */\n      gl_PointSize = aScale * uSize;\n      gl_PointSize *= ( 1.0 / - viewPosition.z );\n\n      /**\n       * Color\n       */\n      vColor = color;\n    }\n",fragmentShader:"\n  varying vec3 vColor;\n\n  void main()\n  {\n      // // Disc\n      // float strength = distance(gl_PointCoord, vec2(0.5));\n      // strength = step(0.5, strength);\n      // strength = 1.0 - strength;\n  \n      // // Diffuse point\n      // float strength = distance(gl_PointCoord, vec2(0.5));\n      // strength *= 2.0;\n      // strength = 1.0 - strength;\n  \n      // Light point\n      float strength = distance(gl_PointCoord, vec2(0.5));\n      strength = 1.0 - strength;\n      strength = pow(strength, 10.0);\n  \n      // Final color\n      vec3 color = mix(vec3(0.0), vColor, strength);\n      gl_FragColor = vec4(color, 1.0);\n  }\n  "})}return Object(s.a)(n,[{key:"uTime",get:function(){return this.uniforms.uTime.value},set:function(t){return this.uniforms.uTime.value=t}}]),n}(r.ShaderMaterial);Object(u.d)({GalaxyMaterial:d});var h=n(9);e.default=function(t){var e=t.count,n=void 0===e?2e5:e,i=t.radius,s=void 0===i?5:i,c=t.branches,l=void 0===c?3:c,d=t.random,v=void 0===d?.2:d,m=t.randomnessPower,f=void 0===m?3:m,b=t.insideColor,g=void 0===b?"#ff6030":b,j=t.outsideColor,y=void 0===j?"#1b3984":j,P=t.layers,p=void 0===P?11:P,M=Object(a.useRef)(),O=Object(a.useMemo)((function(){for(var t=new Float32Array(3*n),e=new Float32Array(3*n),o=new Float32Array(1*n),a=new Float32Array(3*n),i=new r.Color(g),c=new r.Color(y),u=0;u<n;u++){var d=Math.random()*s,h=u%l/l*Math.PI*2;new r.Vector3(Math.cos(h)*d,0,Math.sin(h)*d).toArray(t,3*u);var m=Math.pow(Math.random(),f)*(Math.random()<.5?1:-1)*v*d,b=Math.pow(Math.random(),f)*(Math.random()<.5?1:-1)*v*d,j=Math.pow(Math.random(),f)*(Math.random()<.5?1:-1)*v*d;new r.Vector3(m,b,j).toArray(a,3*u);var P=i.clone();P.lerp(c,d/s),new r.Vector3(P.r,P.g,P.b).toArray(e,3*u),o[u]=Math.random()}return[t,e,o,a]}),[n,s,l,f,g,y,v]),w=Object(o.a)(O,4),x=w[0],C=w[1],S=w[2],z=w[3];return Object(u.e)((function(t,e){M.current.uTime+=e})),Object(h.jsxs)("points",{name:"The Milky Way",layers:p,children:[Object(h.jsxs)("bufferGeometry",{children:[Object(h.jsx)("bufferAttribute",{attachObject:["attributes","position"],count:n,array:x,itemSize:3}),Object(h.jsx)("bufferAttribute",{attachObject:["attributes","color"],count:n,array:C,itemSize:3}),Object(h.jsx)("bufferAttribute",{attachObject:["attributes","aScale"],count:n,array:S,itemSize:1}),Object(h.jsx)("bufferAttribute",{attachObject:["attributes","aRandomness"],count:n,array:z,itemSize:3})]}),Object(h.jsx)("galaxyMaterial",{ref:M,depthWrite:!1,vertexColors:!0})]})}}}]);
//# sourceMappingURL=5.1488a482.chunk.js.map