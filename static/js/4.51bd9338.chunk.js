(this.webpackJsonpsolarsystem=this.webpackJsonpsolarsystem||[]).push([[4],{71:function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var a=n(14),r=n(12),i=n(19),o=function(t){return t===Object(t)&&!Array.isArray(t)&&"function"!==typeof t};function s(t){var e=Object(i.d)(r.TextureLoader,o(t)?Object.values(t):t);if(o(t)){var n=Object.keys(t),s={};return n.forEach((function(t){return Object.assign(s,Object(a.a)({},t,e[n.indexOf(t)]))})),s}return e}s.preload=function(t){return i.d.preload(r.TextureLoader,t)},s.clear=function(t){return i.d.clear(r.TextureLoader,t)}},77:function(t,e,n){"use strict";n.d(e,"a",(function(){return j}));var a=n(13),r=n(26),i=n(49),o=n(5),s=n(12),c=n(1),u=n(8),l=n(3),f=n(4),d=n(10),b=n(2),h=function(t){Object(l.a)(n,t);var e=Object(f.a)(n);function n(){var t;Object(c.a)(this,n),t=e.call(this),Object(d.a)(Object(u.a)(t),"isLineSegmentsGeometry",!0),Object(d.a)(Object(u.a)(t),"type","LineSegmentsGeometry"),Object(d.a)(Object(u.a)(t),"boundingBox",null),Object(d.a)(Object(u.a)(t),"boundingSphere",null),Object(d.a)(Object(u.a)(t),"box",new s.Box3),Object(d.a)(Object(u.a)(t),"vector",new s.Vector3);return t.setIndex([0,2,1,2,3,1,2,4,3,4,5,3,4,6,5,6,7,5]),t.setAttribute("position",new s.Float32BufferAttribute([-1,2,0,1,2,0,-1,1,0,1,1,0,-1,0,0,1,0,0,-1,-1,0,1,-1,0],3)),t.setAttribute("uv",new s.Float32BufferAttribute([-1,2,1,2,-1,1,1,1,-1,-1,1,-1,-1,-2,1,-2],2)),t}return Object(b.a)(n,[{key:"applyMatrix4",value:function(t){var e=this.attributes.instanceStart,n=this.attributes.instanceEnd;return void 0!==e&&(e.applyMatrix4(t),n.applyMatrix4(t),e.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}},{key:"setPositions",value:function(t){var e;if(t instanceof Float32Array)e=t;else{if(!Array.isArray(t))return console.error("LineSegmentsGeometry.setPosition requires either a Float32Array or regular array of numbers"),this;e=new Float32Array(t)}var n=new s.InstancedInterleavedBuffer(e,6,1);return this.setAttribute("instanceStart",new s.InterleavedBufferAttribute(n,3,0)),this.setAttribute("instanceEnd",new s.InterleavedBufferAttribute(n,3,3)),this.computeBoundingBox(),this.computeBoundingSphere(),this}},{key:"setColors",value:function(t){var e;if(t instanceof Float32Array)e=t;else{if(!Array.isArray(t))return console.error("LineSegmentsGeometry.setColors requires either a Float32Array or regular array of numbers"),this;e=new Float32Array(t)}var n=new s.InstancedInterleavedBuffer(e,6,1);return this.setAttribute("instanceColorStart",new s.InterleavedBufferAttribute(n,3,0)),this.setAttribute("instanceColorEnd",new s.InterleavedBufferAttribute(n,3,3)),this}},{key:"fromWireframeGeometry",value:function(t){return this.setPositions(Array.from(t.attributes.position.array)),this}},{key:"fromEdgesGeometry",value:function(t){return this.setPositions(Array.from(t.attributes.position.array)),this}},{key:"fromMesh",value:function(t){return this.fromWireframeGeometry(new s.WireframeGeometry(t.geometry)),this}},{key:"fromLineSegments",value:function(t){var e=t.geometry;return e.isBufferGeometry&&this.setPositions(Array.from(e.attributes.position.array)),this}},{key:"computeBoundingBox",value:function(){null===this.boundingBox&&(this.boundingBox=new s.Box3);var t=this.attributes.instanceStart,e=this.attributes.instanceEnd;void 0!==t&&void 0!==e&&(this.boundingBox.setFromBufferAttribute(t),this.box.setFromBufferAttribute(e),this.boundingBox.union(this.box))}},{key:"computeBoundingSphere",value:function(){null===this.boundingSphere&&(this.boundingSphere=new s.Sphere),null===this.boundingBox&&this.computeBoundingBox();var t=this.attributes.instanceStart,e=this.attributes.instanceEnd;if(void 0!==t&&void 0!==e){var n=this.boundingSphere.center;this.boundingBox&&this.boundingBox.getCenter(n);for(var a=0,r=0,i=t.count;r<i;r++)this.vector.fromBufferAttribute(t,r),a=Math.max(a,n.distanceToSquared(this.vector)),this.vector.fromBufferAttribute(e,r),a=Math.max(a,n.distanceToSquared(this.vector));this.boundingSphere.radius=Math.sqrt(a),isNaN(this.boundingSphere.radius)&&console.error("THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.",this)}}},{key:"toJSON",value:function(){}}]),n}(s.InstancedBufferGeometry),p={linewidth:{value:1},resolution:{value:new s.Vector2(1,1)},dashScale:{value:1},dashSize:{value:1},dashOffset:{value:0},gapSize:{value:1},opacity:{value:1}};s.ShaderLib.line={uniforms:s.UniformsUtils.merge([s.UniformsLib.common,s.UniformsLib.fog,p]),vertexShader:"\n\t\t#include <common>\n\t\t#include <color_pars_vertex>\n\t\t#include <fog_pars_vertex>\n\t\t#include <logdepthbuf_pars_vertex>\n\t\t#include <clipping_planes_pars_vertex>\n\n\t\tuniform float linewidth;\n\t\tuniform vec2 resolution;\n\n\t\tattribute vec3 instanceStart;\n\t\tattribute vec3 instanceEnd;\n\n\t\tattribute vec3 instanceColorStart;\n\t\tattribute vec3 instanceColorEnd;\n\n\t\tvarying vec2 vUv;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashScale;\n\t\t\tattribute float instanceDistanceStart;\n\t\t\tattribute float instanceDistanceEnd;\n\t\t\tvarying float vLineDistance;\n\n\t\t#endif\n\n\t\tvoid trimSegment( const in vec4 start, inout vec4 end ) {\n\n\t\t\t// trim end segment so it terminates between the camera plane and the near plane\n\n\t\t\t// conservative estimate of the near plane\n\t\t\tfloat a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column\n\t\t\tfloat b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column\n\t\t\tfloat nearEstimate = - 0.5 * b / a;\n\n\t\t\tfloat alpha = ( nearEstimate - start.z ) / ( end.z - start.z );\n\n\t\t\tend.xyz = mix( start.xyz, end.xyz, alpha );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\t#ifdef USE_COLOR\n\n\t\t\t\tvColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;\n\n\t\t\t#endif\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;\n\n\t\t\t#endif\n\n\t\t\tfloat aspect = resolution.x / resolution.y;\n\n\t\t\tvUv = uv;\n\n\t\t\t// camera space\n\t\t\tvec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );\n\t\t\tvec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );\n\n\t\t\t// special case for perspective projection, and segments that terminate either in, or behind, the camera plane\n\t\t\t// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\n\t\t\t// but we need to perform ndc-space calculations in the shader, so we must address this issue directly\n\t\t\t// perhaps there is a more elegant solution -- WestLangley\n\n\t\t\tbool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column\n\n\t\t\tif ( perspective ) {\n\n\t\t\t\tif ( start.z < 0.0 && end.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( start, end );\n\n\t\t\t\t} else if ( end.z < 0.0 && start.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( end, start );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// clip space\n\t\t\tvec4 clipStart = projectionMatrix * start;\n\t\t\tvec4 clipEnd = projectionMatrix * end;\n\n\t\t\t// ndc space\n\t\t\tvec2 ndcStart = clipStart.xy / clipStart.w;\n\t\t\tvec2 ndcEnd = clipEnd.xy / clipEnd.w;\n\n\t\t\t// direction\n\t\t\tvec2 dir = ndcEnd - ndcStart;\n\n\t\t\t// account for clip-space aspect ratio\n\t\t\tdir.x *= aspect;\n\t\t\tdir = normalize( dir );\n\n\t\t\t// perpendicular to dir\n\t\t\tvec2 offset = vec2( dir.y, - dir.x );\n\n\t\t\t// undo aspect ratio adjustment\n\t\t\tdir.x /= aspect;\n\t\t\toffset.x /= aspect;\n\n\t\t\t// sign flip\n\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t// endcaps\n\t\t\tif ( position.y < 0.0 ) {\n\n\t\t\t\toffset += - dir;\n\n\t\t\t} else if ( position.y > 1.0 ) {\n\n\t\t\t\toffset += dir;\n\n\t\t\t}\n\n\t\t\t// adjust for linewidth\n\t\t\toffset *= linewidth;\n\n\t\t\t// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\n\t\t\toffset /= resolution.y;\n\n\t\t\t// select end\n\t\t\tvec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\n\n\t\t\t// back to clip space\n\t\t\toffset *= clip.w;\n\n\t\t\tclip.xy += offset;\n\n\t\t\tgl_Position = clip;\n\n\t\t\tvec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation\n\n\t\t\t#include <logdepthbuf_vertex>\n\t\t\t#include <clipping_planes_vertex>\n\t\t\t#include <fog_vertex>\n\n\t\t}\n\t\t",fragmentShader:"\n\t\tuniform vec3 diffuse;\n\t\tuniform float opacity;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashSize;\n\t\t\tuniform float dashOffset;\n\t\t\tuniform float gapSize;\n\n\t\t#endif\n\n\t\tvarying float vLineDistance;\n\n\t\t#include <common>\n\t\t#include <color_pars_fragment>\n\t\t#include <fog_pars_fragment>\n\t\t#include <logdepthbuf_pars_fragment>\n\t\t#include <clipping_planes_pars_fragment>\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\t#include <clipping_planes_fragment>\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tif ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps\n\n\t\t\t\tif ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX\n\n\t\t\t#endif\n\n\t\t\tfloat alpha = opacity;\n\n\t\t\t#ifdef ALPHA_TO_COVERAGE\n\n\t\t\t// artifacts appear on some hardware if a derivative is taken within a conditional\n\t\t\tfloat a = vUv.x;\n\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\tfloat len2 = a * a + b * b;\n\t\t\tfloat dlen = fwidth( len2 );\n\n\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\talpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );\n\n\t\t\t}\n\n\t\t\t#else\n\n\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\tfloat a = vUv.x;\n\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\tfloat len2 = a * a + b * b;\n\n\t\t\t\tif ( len2 > 1.0 ) discard;\n\n\t\t\t}\n\n\t\t\t#endif\n\n\t\t\tvec4 diffuseColor = vec4( diffuse, alpha );\n\n\t\t\t#include <logdepthbuf_fragment>\n\t\t\t#include <color_fragment>\n\n\t\t\tgl_FragColor = vec4( diffuseColor.rgb, alpha );\n\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <encodings_fragment>\n\t\t\t#include <fog_fragment>\n\t\t\t#include <premultiplied_alpha_fragment>\n\n\t\t}\n\t\t"};var v=function(t){Object(l.a)(n,t);var e=Object(f.a)(n);function n(){var t,a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return Object(c.a)(this,n),t=e.call(this,{uniforms:s.UniformsUtils.clone(s.ShaderLib.line.uniforms),vertexShader:s.ShaderLib.line.vertexShader,fragmentShader:s.ShaderLib.line.fragmentShader,clipping:!0}),Object(d.a)(Object(u.a)(t),"isLineMaterial",!0),Object(d.a)(Object(u.a)(t),"dashed",!1),Object(d.a)(Object(u.a)(t),"color",new s.Color(0)),Object(d.a)(Object(u.a)(t),"lineWidth",0),Object(d.a)(Object(u.a)(t),"dashScale",0),Object(d.a)(Object(u.a)(t),"dashOffset",0),Object(d.a)(Object(u.a)(t),"dashSize",0),Object(d.a)(Object(u.a)(t),"opacity",0),Object(d.a)(Object(u.a)(t),"resolution",new s.Vector2),Object(d.a)(Object(u.a)(t),"alphaToCoverage",!1),Object.defineProperties(Object(u.a)(t),{color:{enumerable:!0,get:function(){return this.uniforms.diffuse.value},set:function(t){var e=new s.Color(t);this.uniforms.diffuse.value=e.getHex()}},linewidth:{enumerable:!0,get:function(){return this.uniforms.linewidth.value},set:function(t){this.uniforms.linewidth.value=t}},dashScale:{enumerable:!0,get:function(){return this.uniforms.dashScale.value},set:function(t){this.uniforms.dashScale.value=t}},dashSize:{enumerable:!0,get:function(){return this.uniforms.dashSize.value},set:function(t){this.uniforms.dashSize.value=t}},dashOffset:{enumerable:!0,get:function(){return this.uniforms.dashOffset.value},set:function(t){this.uniforms.dashOffset.value=t}},gapSize:{enumerable:!0,get:function(){return this.uniforms.gapSize.value},set:function(t){this.uniforms.gapSize.value=t}},opacity:{enumerable:!0,get:function(){return this.uniforms.opacity.value},set:function(t){this.uniforms.opacity.value=t}},resolution:{enumerable:!0,get:function(){return this.uniforms.resolution.value},set:function(t){this.uniforms.resolution.value.copy(t)}},alphaToCoverage:{enumerable:!0,get:function(){return Boolean("ALPHA_TO_COVERAGE"in this.defines)},set:function(t){Boolean(t)!==Boolean("ALPHA_TO_COVERAGE"in this.defines)&&(this.needsUpdate=!0),t?(this.defines.ALPHA_TO_COVERAGE="",this.extensions.derivatives=!0):(delete this.defines.ALPHA_TO_COVERAGE,this.extensions.derivatives=!1)}},dashed:{enumerable:!0,get:function(){return Boolean("USE_DASH"in this.defines)},set:function(t){Boolean(t)!==Boolean("USE_DASH"in this.defines)&&(this.needsUpdate=!0),t?this.defines.USE_DASH="":delete this.defines.USE_DASH}}}),t.setValues(a),t}return n}(s.ShaderMaterial),m=function(t){Object(l.a)(n,t);var e=Object(f.a)(n);function n(){var t,a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new h,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new v({color:16777215*Math.random()});return Object(c.a)(this,n),t=e.call(this,a,r),Object(d.a)(Object(u.a)(t),"type","LineSegments2"),Object(d.a)(Object(u.a)(t),"isLineSegments2",!0),Object(d.a)(Object(u.a)(t),"distStart",new s.Vector3),Object(d.a)(Object(u.a)(t),"distEnd",new s.Vector3),Object(d.a)(Object(u.a)(t),"computeLineDistances",(function(){for(var e=t.geometry,n=e.attributes.instanceStart,a=e.attributes.instanceEnd,r=new Float32Array(2*n.data.count),i=0,o=0,c=n.data.count;i<c;i++,o+=2)t.distStart.fromBufferAttribute(n,i),t.distEnd.fromBufferAttribute(a,i),r[o]=0===o?0:r[o-1],r[o+1]=r[o]+t.distStart.distanceTo(t.distEnd);var l=new s.InstancedInterleavedBuffer(r,2,1);return e.setAttribute("instanceDistanceStart",new s.InterleavedBufferAttribute(l,1,0)),e.setAttribute("instanceDistanceEnd",new s.InterleavedBufferAttribute(l,1,1)),Object(u.a)(t)})),Object(d.a)(Object(u.a)(t),"rayStart",new s.Vector4),Object(d.a)(Object(u.a)(t),"rayEnd",new s.Vector4),Object(d.a)(Object(u.a)(t),"ssOrigin",new s.Vector4),Object(d.a)(Object(u.a)(t),"ssOrigin3",new s.Vector3),Object(d.a)(Object(u.a)(t),"mvMatrix",new s.Matrix4),Object(d.a)(Object(u.a)(t),"line",new s.Line3),Object(d.a)(Object(u.a)(t),"closestPoint",new s.Vector3),Object(d.a)(Object(u.a)(t),"raycast",(function(e,n){null===e.camera&&console.error('LineSegments2: "Raycaster.camera" needs to be set in order to raycast against LineSegments2.');var a=e.ray,r=e.camera,i=r.projectionMatrix,o=t.geometry,c=t.material,l=c.resolution,f=c.linewidth+0,d=o.attributes.instanceStart,b=o.attributes.instanceEnd,h=-r.near;a.at(1,t.ssOrigin),t.ssOrigin.w=1,t.ssOrigin.applyMatrix4(r.matrixWorldInverse),t.ssOrigin.applyMatrix4(i),t.ssOrigin.multiplyScalar(1/t.ssOrigin.w),t.ssOrigin.x*=l.x/2,t.ssOrigin.y*=l.y/2,t.ssOrigin.z=0,t.ssOrigin3.set(t.ssOrigin.x,t.ssOrigin.y,t.ssOrigin.z);var p=t.matrixWorld;t.mvMatrix.multiplyMatrices(r.matrixWorldInverse,p);for(var v=0,m=d.count;v<m;v++){if(t.rayStart.fromBufferAttribute(d,v),t.rayEnd.fromBufferAttribute(b,v),t.rayStart.w=1,t.rayEnd.w=1,t.rayStart.applyMatrix4(t.mvMatrix),t.rayEnd.applyMatrix4(t.mvMatrix),!(t.rayStart.z>h&&t.rayEnd.z>h)){if(t.rayStart.z>h){var y=t.rayStart.z-t.rayEnd.z,O=(t.rayStart.z-h)/y;t.rayStart.lerp(t.rayEnd,O)}else if(t.rayEnd.z>h){var g=t.rayEnd.z-t.rayStart.z,S=(t.rayEnd.z-h)/g;t.rayEnd.lerp(t.rayStart,S)}t.rayStart.applyMatrix4(i),t.rayEnd.applyMatrix4(i),t.rayStart.multiplyScalar(1/t.rayStart.w),t.rayEnd.multiplyScalar(1/t.rayEnd.w),t.rayStart.x*=l.x/2,t.rayStart.y*=l.y/2,t.rayEnd.x*=l.x/2,t.rayEnd.y*=l.y/2,t.line.start.set(t.rayStart.x,t.rayStart.y,t.rayStart.z),t.line.start.z=0,t.line.end.set(t.rayEnd.x,t.rayEnd.y,t.rayEnd.z),t.line.end.z=0;var j=t.line.closestPointToPointParameter(t.ssOrigin3,!0);t.line.at(j,t.closestPoint);var x=s.MathUtils.lerp(t.rayStart.z,t.rayEnd.z,j),w=x>=-1&&x<=1,E=t.ssOrigin3.distanceTo(t.closestPoint)<.5*f;if(w&&E){t.line.start.fromBufferAttribute(d,v),t.line.end.fromBufferAttribute(b,v),t.line.start.applyMatrix4(p),t.line.end.applyMatrix4(p);var A=new s.Vector3,B=new s.Vector3;a.distanceSqToSegment(t.line.start,t.line.end,B,A),n.push({distance:a.origin.distanceTo(B),point:B,face:null,faceIndex:v,object:Object(u.a)(t),uv:void 0,pointOnLine:A})}}}})),t}return n}(s.Mesh),y=n(7),O=n(6),g=function(t){Object(l.a)(n,t);var e=Object(f.a)(n);function n(){var t,a;return Object(c.a)(this,n),a=e.call(this),Object(d.a)(Object(u.a)(a),"type","LineGeometry"),Object(d.a)(Object(u.a)(a),"isLineGeometry",!0),Object(d.a)(Object(u.a)(a),"setColors",(function(e){for(var r=e.length-3,i=new Float32Array(2*r),o=0;o<r;o+=3)i[2*o]=e[o],i[2*o+1]=e[o+1],i[2*o+2]=e[o+2],i[2*o+3]=e[o+3],i[2*o+4]=e[o+4],i[2*o+5]=e[o+5];return Object(y.a)((t=Object(u.a)(a),Object(O.a)(n.prototype)),"setColors",t).call(t,i),Object(u.a)(a)})),Object(d.a)(Object(u.a)(a),"fromLine",(function(t){var e=t.geometry;return e.isBufferGeometry&&a.setPositions(Array.from(e.attributes.position.array)),Object(u.a)(a)})),Object(d.a)(Object(u.a)(a),"copy",(function(){return Object(u.a)(a)})),a}return Object(b.a)(n,[{key:"setPositions",value:function(t){for(var e=t.length-3,a=new Float32Array(2*e),r=0;r<e;r+=3)a[2*r]=t[r],a[2*r+1]=t[r+1],a[2*r+2]=t[r+2],a[2*r+3]=t[r+3],a[2*r+4]=t[r+4],a[2*r+5]=t[r+5];return Object(y.a)(Object(O.a)(n.prototype),"setPositions",this).call(this,a),this}}]),n}(h),S=function(t){Object(l.a)(n,t);var e=Object(f.a)(n);function n(){var t,a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new g,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new v({color:16777215*Math.random()});return Object(c.a)(this,n),t=e.call(this,a,r),Object(d.a)(Object(u.a)(t),"type","Line2"),Object(d.a)(Object(u.a)(t),"isLine2",!0),t}return n}(m),j=o.forwardRef((function(t,e){var n=t.points,c=t.color,u=void 0===c?"black":c,l=t.vertexColors,f=t.lineWidth,d=t.dashed,b=Object(r.a)(t,["points","color","vertexColors","lineWidth","dashed"]),h=o.useState((function(){return new S})),p=Object(a.a)(h,1)[0],m=o.useState((function(){return new v})),y=Object(a.a)(m,1)[0],O=o.useState((function(){return new s.Vector2(512,512)})),j=Object(a.a)(O,1)[0],x=o.useMemo((function(){var t=new g,e=n.map((function(t){return t instanceof s.Vector3?t.toArray():t}));if(t.setPositions(e.flat()),l){var a=l.map((function(t){return t instanceof s.Color?t.toArray():t}));t.setColors(a.flat())}return t}),[n,l]);return o.useLayoutEffect((function(){p.computeLineDistances()}),[n,p]),o.useLayoutEffect((function(){d?y.defines.USE_DASH="":delete y.defines.USE_DASH,y.needsUpdate=!0}),[d,y]),o.useEffect((function(){return function(){return x.dispose()}}),[x]),o.createElement("primitive",Object(i.a)({object:p,ref:e},b),o.createElement("primitive",{object:x,attach:"geometry"}),o.createElement("primitive",Object(i.a)({object:y,attach:"material",color:u,vertexColors:Boolean(l),resolution:j,linewidth:f,dashed:d},b)))}))}}]);
//# sourceMappingURL=4.51bd9338.chunk.js.map