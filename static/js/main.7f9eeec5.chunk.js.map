{"version":3,"sources":["store/createCameraSlice.js","store/useStore.js","components/DestinationPanel/DestinationPanel.module.css","assets/textures/texture_earth.jpg","assets/textures/texture_moon.jpeg","assets/textures/texture_venus.jpeg","assets/textures/texture_mercury.jpeg","assets/textures/texture_saturn.jpeg","assets/textures/texture_uranus.jpeg","assets/textures/texture_neptune.jpeg","assets/textures/texture_mars.jpeg","assets/images/earth.png","assets/images/moon.png","assets/images/venus.png","assets/images/mercury.png","assets/images/jupiter.png","assets/images/saturn.png","assets/images/uranus.png","assets/images/neptune.png","assets/images/mars.png","assets/textures/bumpmap_earth.jpg","assets/textures/normal_earth.png","assets/textures/specular_earth.png","assets/textures/texture_earth_cloud.png","utilities/planetData.js","components/Fallback/Fallback.module.css","assets/textures/texture_jupiter.jpeg","components/CameraControl.js","components/Lights.js","components/TrackballControl.js","components/Fallback/Fallback.js","components/DestinationPanel/PlanetOption.js","components/DestinationPanel/DestinationPanel.js","App.js","reportWebVitals.js","index.js"],"names":["createCameraSlice","set","get","isControl","setControl","payload","activePlanet","activePlanetName","activePlanetRadius","setActivePlanet","console","log","name","size","activeCameraPlanet","setActiveCameraPlanet","shouldUpdateCameraPosition","setUpdateCameraPosition","cameraPos","THREE","setCameraPos","cameraRos","useStore","create","module","exports","sunRadius","orbitWidth","earthData","texture","earthTexture","orbitRate","rotationRate","distance","axialTilt","Math","PI","orbitData","innerDiameter","facets","color","thumbnail","earthThumbnail","bumpMap","earthBumpmap","specularMap","earthSpecular","normalMap","earthNormal","earthCloud","moonData","moonTexture","moonThumbnail","planets","mercuryTexture","mercuryThumbnail","venusTexture","venusThumbnail","marsTexture","marsThumbnail","jupiterTexture","jupiterThumbnail","saturnTexture","saturnThumbnail","uranusTexture","uranusThumbnail","neptuneTexture","neptuneThumbnail","CameraControl","scene","useThree","state","useFrame","camera","currentPlanet","getObjectByName","currentPlanetRadius","currentPlanetPosition","position","lerp","z","clone","sub","length","trackball","target","update","softShadows","frustum","near","samples","rings","Lights","intensity","Trackball","TrackballControls","attach","Fallback","progress","useState","displayState","setDisplayState","transformState","setTransformState","opacity","useSpring","from","to","config","duration","useEffect","timer","setTimeout","clearTimeout","div","style","display","className","styles","fallback","transform","loadingBar","PlanetOption","onClick","option","planet","src","alt","DestinationPanel","OptionPanel","map","key","panel","container","Scene","lazy","App","cameraPosition","CustomLoader","useProgress","colorManagement","background","far","TrackballControl","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f9eeec5.chunk.js","sourcesContent":["import * as THREE from \"three\";\n\nconst createCameraSlice = (set, get) => ({\n  isControl: false,\n  setControl: (payload) => {\n    set(() => ({ isControl: payload }));\n  },\n\n  activePlanet: {\n    activePlanetName: null,\n    activePlanetRadius: null,\n  },\n  setActivePlanet: (payload) => {\n    console.log(\"payload\", payload);\n    set(() => ({\n      activePlanet: {\n        activePlanetName: payload.name,\n        activePlanetRadius: payload.size,\n      },\n    }));\n  },\n\n  activeCameraPlanet: null,\n  setActiveCameraPlanet: (payload) => {\n    set(() => ({ activeCameraPlanet: payload }));\n  },\n\n  shouldUpdateCameraPosition: true,\n  setUpdateCameraPosition: (payload) => {\n    set(() => ({ shouldUpdateCameraPosition: payload }));\n  },\n\n  //Init position\n  cameraPos: new THREE.Vector3(\n    66.68508708051569,\n    62.688036623625365,\n    64.63972187177964\n  ),\n  setCameraPos: (payload) => {\n    set(() => ({ cameraPos: payload }));\n  },\n\n  cameraRos: new THREE.Vector3(\n    -0.7700713215209677,\n    0.6374423945561629,\n    0.5234656298847726\n  ),\n});\n\nexport default createCameraSlice;\n","import create from \"zustand\";\n\nimport createCameraSlice from \"./createCameraSlice\";\n\nconst useStore = create((set, get) => ({\n  ...createCameraSlice(set, get),\n}));\n\nexport default useStore;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panel\":\"DestinationPanel_panel__1NFU4\",\"option\":\"DestinationPanel_option__3NeZm\",\"name\":\"DestinationPanel_name__2jEsH\",\"planet\":\"DestinationPanel_planet__2jRWi\",\"container\":\"DestinationPanel_container__2AHHx\"};","export default __webpack_public_path__ + \"static/media/texture_earth.1d9f4954.jpg\";","export default __webpack_public_path__ + \"static/media/texture_moon.076144c3.jpeg\";","export default __webpack_public_path__ + \"static/media/texture_venus.212cb5ee.jpeg\";","export default __webpack_public_path__ + \"static/media/texture_mercury.ef31624b.jpeg\";","export default __webpack_public_path__ + \"static/media/texture_saturn.721ee595.jpeg\";","export default __webpack_public_path__ + \"static/media/texture_uranus.6989dacf.jpeg\";","export default __webpack_public_path__ + \"static/media/texture_neptune.165bdad0.jpeg\";","export default __webpack_public_path__ + \"static/media/texture_mars.b793dd75.jpeg\";","export default __webpack_public_path__ + \"static/media/earth.990ac782.png\";","export default __webpack_public_path__ + \"static/media/moon.2b4c176a.png\";","export default __webpack_public_path__ + \"static/media/venus.397fdee2.png\";","export default __webpack_public_path__ + \"static/media/mercury.a7105a56.png\";","export default __webpack_public_path__ + \"static/media/jupiter.529cdbe0.png\";","export default __webpack_public_path__ + \"static/media/saturn.00b7295f.png\";","export default __webpack_public_path__ + \"static/media/uranus.607cb33c.png\";","export default __webpack_public_path__ + \"static/media/neptune.48cf14b7.png\";","export default __webpack_public_path__ + \"static/media/mars.6cae79d3.png\";","export default __webpack_public_path__ + \"static/media/bumpmap_earth.3bc3af08.jpg\";","export default __webpack_public_path__ + \"static/media/normal_earth.50692705.png\";","export default __webpack_public_path__ + \"static/media/specular_earth.c1ee5f99.png\";","export default __webpack_public_path__ + \"static/media/texture_earth_cloud.4373337e.png\";","import earthTexture from \"../assets/textures/texture_earth.jpg\";\nimport moonTexture from \"../assets/textures/texture_moon.jpeg\";\nimport venusTexture from \"../assets/textures/texture_venus.jpeg\";\nimport mercuryTexture from \"../assets/textures/texture_mercury.jpeg\";\nimport jupiterTexture from \"../assets/textures/texture_jupiter.jpeg\";\nimport saturnTexture from \"../assets/textures/texture_saturn.jpeg\";\nimport uranusTexture from \"../assets/textures/texture_uranus.jpeg\";\nimport neptuneTexture from \"../assets/textures/texture_neptune.jpeg\";\nimport marsTexture from \"../assets/textures/texture_mars.jpeg\";\n\nimport earthThumbnail from \"../assets/images/earth.png\";\nimport moonThumbnail from \"../assets/images/moon.png\";\nimport venusThumbnail from \"../assets/images/venus.png\";\nimport mercuryThumbnail from \"../assets/images/mercury.png\";\nimport jupiterThumbnail from \"../assets/images/jupiter.png\";\nimport saturnThumbnail from \"../assets/images/saturn.png\";\nimport uranusThumbnail from \"../assets/images/uranus.png\";\nimport neptuneThumbnail from \"../assets/images/neptune.png\";\nimport marsThumbnail from \"../assets/images/mars.png\";\n\nimport earthBumpmap from \"../assets/textures/bumpmap_earth.jpg\";\nimport earthNormal from \"../assets/textures/normal_earth.png\";\nimport earthSpecular from \"../assets/textures/specular_earth.png\";\nimport earthCloud from \"../assets/textures/texture_earth_cloud.png\";\n\nexport const sunRadius = 25;\nexport const orbitWidth = 0.01;\nexport const earthData = {\n  name: \"earth\",\n  texture: earthTexture,\n  orbitRate: 365.2565,\n  rotationRate: -0.015,\n  distance: 15 + sunRadius,\n  size: 1,\n  axialTilt: [23.4 * (Math.PI / 180), 0, 0],\n  orbitData: {\n    size: 15 + sunRadius + orbitWidth,\n    innerDiameter: 15 + sunRadius - orbitWidth,\n    facets: 320,\n    color: 0xffffff,\n    name: \"earthOrbit\",\n    distance: 0,\n  },\n  thumbnail: earthThumbnail,\n  bumpMap: earthBumpmap,\n  specularMap: earthSpecular,\n  normalMap: earthNormal,\n  earthCloud: earthCloud,\n};\n\nexport const moonData = {\n  name: \"moon\",\n  texture: moonTexture,\n  orbitRate: 29.5,\n  rotationRate: -0.01,\n  distance: 1.8,\n  size: 0.27,\n  axialTilt: [6.68 * (Math.PI / 180), 0, 0],\n  orbitData: {\n    size: 1.8 + orbitWidth,\n    innerDiameter: 1.8 - orbitWidth,\n    facets: 320,\n    color: 0xffffff,\n    name: \"moonOrbit\",\n    distance: 0,\n  },\n  thumbnail: moonThumbnail,\n};\n\nexport const planets = [\n  {\n    name: \"mercury\",\n    texture: mercuryTexture,\n    orbitRate: 87.969,\n    rotationRate: -0.0061,\n    distance: 5.7 + sunRadius,\n    size: 1 / 2.6114,\n    axialTilt: [0.01 * (Math.PI / 180), 0, 0],\n    orbitData: {\n      size: 5.7 + sunRadius + orbitWidth,\n      innerDiameter: 5.7 + sunRadius - orbitWidth,\n      facets: 320,\n      color: 0xffffff,\n      name: \"mercuryOrbit\",\n      distance: 0,\n    },\n    thumbnail: mercuryThumbnail,\n  },\n  {\n    name: \"venus\",\n    texture: venusTexture,\n    orbitRate: 225,\n    rotationRate: 0.00006172839,\n    distance: 10.8 + sunRadius,\n    size: 1 / 1.05292553191,\n    axialTilt: [2.64 * (Math.PI / 180), 0, 0],\n    orbitData: {\n      size: 10.8 + sunRadius + orbitWidth,\n      innerDiameter: 10.8 + sunRadius - orbitWidth,\n      facets: 320,\n      color: 0xffffff,\n      name: \"venusOrbit\",\n      distance: 0,\n    },\n    thumbnail: venusThumbnail,\n  },\n  {\n    name: \"mars\",\n    texture: marsTexture,\n    orbitRate: 687,\n    rotationRate: -0.015,\n    distance: 22.7 + sunRadius,\n    size: 0.53,\n    axialTilt: [25.19 * (Math.PI / 180), 0, 0],\n    orbitData: {\n      size: 22.7 + sunRadius + orbitWidth,\n      innerDiameter: 22.7 + sunRadius - orbitWidth,\n      facets: 320,\n      color: 0xffffff,\n      name: \"marsOrbit\",\n      distance: 0,\n    },\n    thumbnail: marsThumbnail,\n  },\n  {\n    name: \"jupiter\",\n    texture: jupiterTexture,\n    orbitRate: 4333,\n    rotationRate: -0.036,\n    distance: 88.8 + sunRadius,\n    size: 10.97,\n    axialTilt: [3.12 * (Math.PI / 180), 0, 0],\n    orbitData: {\n      size: 88.8 + sunRadius + orbitWidth,\n      innerDiameter: 88.8 + sunRadius - orbitWidth,\n      facets: 320,\n      color: 0xffffff,\n      name: \"jupiterOrbit\",\n      distance: 0,\n    },\n    thumbnail: jupiterThumbnail,\n  },\n  {\n    name: \"saturn\",\n    texture: saturnTexture,\n    orbitRate: 10759,\n    rotationRate: -0.03529,\n    distance: 143.4 + sunRadius,\n    size: 9.14,\n    axialTilt: [26.73 * (Math.PI / 180), 0, 0],\n    orbitData: {\n      size: 143.4 + sunRadius + orbitWidth,\n      innerDiameter: 143.4 + sunRadius - orbitWidth,\n      facets: 320,\n      color: 0xffffff,\n      name: \"saturnOrbit\",\n      distance: 0,\n    },\n    thumbnail: saturnThumbnail,\n  },\n  {\n    name: \"uranus\",\n    texture: uranusTexture,\n    orbitRate: 30660,\n    rotationRate: -0.0211,\n    distance: 287.3 + sunRadius,\n    size: 3.98,\n    axialTilt: [82.23 * (Math.PI / 180), 0, 0],\n    orbitData: {\n      size: 287.3 + sunRadius + orbitWidth,\n      innerDiameter: 287.3 + sunRadius - orbitWidth,\n      facets: 320,\n      color: 0xffffff,\n      name: \"uranusOrbit\",\n      distance: 0,\n    },\n    thumbnail: uranusThumbnail,\n  },\n  {\n    name: \"neptune\",\n    texture: neptuneTexture,\n    orbitRate: 60266,\n    rotationRate: -0.0225,\n    distance: 450.1 + sunRadius,\n    size: 3.86,\n    axialTilt: [28.33 * (Math.PI / 180), 0, 0],\n    orbitData: {\n      size: 450.1 + sunRadius + orbitWidth,\n      innerDiameter: 450.1 + sunRadius - orbitWidth,\n      facets: 320,\n      color: 0xffffff,\n      name: \"neptuneOrbit\",\n      distance: 0,\n    },\n    thumbnail: neptuneThumbnail,\n  },\n];\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fallback\":\"Fallback_fallback__4Vn0R\",\"loader\":\"Fallback_loader__7GaeN\",\"loadingBar\":\"Fallback_loadingBar__15lRv\"};","export default __webpack_public_path__ + \"static/media/texture_jupiter.6620327c.jpeg\";","import { useFrame, useThree } from \"@react-three/fiber\";\nimport useStore from \"../store/useStore\";\n\nfunction CameraControl() {\n  const { scene } = useThree();\n\n  const activePlanet = useStore((state) => state.activePlanet);\n\n  const activeCameraPlanet = useStore((state) => state.activeCameraPlanet);\n  \n  const setActiveCameraPlanet = useStore(\n    (state) => state.setActiveCameraPlanet\n  );\n\n  const shouldUpdateCameraPosition = useStore(\n    (state) => state.shouldUpdateCameraPosition\n  );\n  const setUpdateCameraPosition = useStore(\n    (state) => state.setUpdateCameraPosition\n  );\n\n  useFrame(({ camera }) => {\n    //Update the camera target when new planet clicked\n\n    if (activePlanet.activePlanetName !== activeCameraPlanet) {\n      setActiveCameraPlanet(activePlanet.activePlanetName);\n    }\n\n    //Drive the camera to the view's position\n    if (shouldUpdateCameraPosition) {\n      const currentPlanet = scene?.getObjectByName(\n        activePlanet.activePlanetName\n      );\n      const currentPlanetRadius = activePlanet.activePlanetRadius;\n      if (currentPlanet) {\n        const currentPlanetPosition = currentPlanet?.position;\n\n        camera.position.lerp(\n          {\n            ...currentPlanetPosition,\n            z: currentPlanetPosition.z + 3 * currentPlanetRadius,\n          },\n          0.05\n        );\n        const diff = camera.position\n          .clone()\n          .sub(currentPlanetPosition)\n          .length();\n        if (diff < 3 * currentPlanetRadius) setUpdateCameraPosition(false);\n      }\n    }\n\n    //Update trackball target\n    if (activeCameraPlanet) {\n      const currentPlanetPosition =\n        scene?.getObjectByName(activeCameraPlanet)?.position;\n      scene.trackball?.target.lerp(currentPlanetPosition, 0.05);\n      scene.trackball?.update();\n    }\n  });\n\n  return null;\n}\n\nexport default CameraControl;\n","import { softShadows } from \"@react-three/drei\";\nsoftShadows({\n  frustum: 3.75,\n  size: 0.005,\n  near: 9.5,\n  samples: 17,\n  rings: 11, // Rings (default: 11) must be a int\n});\nfunction Lights() {\n  return (\n    <>\n      <ambientLight intensity={0.3} />\n      <pointLight\n        \n        color=\"rgb(255, 220, 180)\"\n        intensity={1.5}\n     \n      />\n    </>\n  );\n}\n\nexport default Lights;\n","\nimport {  TrackballControls } from \"@react-three/drei\";\n\nconst Trackball = () => {\n\n  return <TrackballControls attach='trackball'  />;\n};\n\nexport default Trackball;\n","import { useState, useEffect } from \"react\";\nimport styles from \"./Fallback.module.css\";\n\nimport { useSpring, animated } from \"react-spring\";\n\nfunction Fallback({ progress }) {\n  const [displayState, setDisplayState] = useState(\"flex\");\n  const [transformState, setTransformState] = useState(0);\n\n  const opacity = useSpring({\n    from: { opacity: 1 },\n    to: { opacity: 0 },\n    config: { duration: 2000 },\n  });\n\n  useEffect(() => {\n    setTransformState(progress / 100);\n\n    let timer;\n    if (progress === 100) {\n      timer = setTimeout(() => setDisplayState(\"none\"), 2000);\n    }\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [progress]);\n\n  return (\n    <animated.div\n      style={progress === 100 ? { ...opacity, display: displayState } : {}}\n      className={styles.fallback}\n    >\n      <h1>GENERATING SOLAR SYSTEM </h1>\n      <div\n        style={{ transform: `scaleX(${transformState})` }}\n        className={styles.loadingBar}\n      />\n      <span>{progress} %</span>\n    </animated.div>\n  );\n}\n\nexport default Fallback;\n","import useStore from \"../../store/useStore\";\nimport styles from \"./DestinationPanel.module.css\";\n\nfunction PlanetOption({ thumbnail, name, size }) {\n  const setActivePlanet = useStore((state) => state.setActivePlanet);\n  const setUpdateCameraPosition = useStore(\n    (state) => state.setUpdateCameraPosition\n  );\n\n  const onPlanetClick = () => {\n    setActivePlanet({ name, size });\n    setUpdateCameraPosition(true);\n  };\n  return (\n    <div onClick={() => onPlanetClick()} className={styles.option}>\n      <img className={styles.planet} src={thumbnail} alt={name} />\n      <div className={styles.name}>{name}</div>\n    </div>\n  );\n}\n\nexport default PlanetOption;\n","import styles from \"./DestinationPanel.module.css\";\n\nimport { planets, earthData, moonData } from \"../../utilities/planetData\";\nimport PlanetOption from \"./PlanetOption\";\n\nfunction DestinationPanel() {\n  const OptionPanel = () => {\n    return planets.map((planet) => (\n      <PlanetOption {...planet} key={planet.name} />\n    ));\n  };\n  return (\n    <div className={styles.panel}>\n      <div className={styles.container}>\n        <PlanetOption {...earthData} key={earthData.name} />\n        <PlanetOption {...moonData} key={moonData.name} />\n        <OptionPanel />\n      </div>\n    </div>\n  );\n}\n\nexport default DestinationPanel;\n","import \"./App.css\";\nimport React, { Suspense, lazy } from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { useProgress } from \"@react-three/drei\";\n\nimport CameraControl from \"./components/CameraControl\";\nimport Lights from \"./components/Lights\";\nimport TrackballControl from \"./components/TrackballControl\";\nimport Fallback from \"./components/Fallback/Fallback\";\nimport DestinationPanel from \"./components/DestinationPanel/DestinationPanel\";\nimport useStore from \"./store/useStore\";\n\nconst Scene = lazy(() => import(\"./components/Scene\"));\n//import Scene from \"./components/Scene\";\n// import Effect from \"./components/Effect\";\n\nfunction App() {\n  const cameraPosition = useStore((state) => state.cameraPos);\n\n  function CustomLoader() {\n    const { progress } = useProgress();\n    return <Fallback progress={progress} />;\n  }\n\n  return (\n    <>\n      <DestinationPanel />\n      <CustomLoader />\n\n      <Canvas\n        colorManagement\n        style={{ background: \"#232323\" }}\n        camera={{ position: cameraPosition, near: 0.001, far: 100000 }}\n      >\n        <Lights />\n        <CameraControl />\n        {/* <Effect /> */}\n        <TrackballControl />\n        <Suspense fallback={null}>\n          <Scene />\n        </Suspense>\n      </Canvas>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}