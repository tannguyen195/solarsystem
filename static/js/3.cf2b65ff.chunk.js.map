{"version":3,"sources":["../node_modules/@react-three/drei/core/useTexture.js","assets/textures/galaxy_starfield.png","components/Galaxy.js"],"names":["IsObject","url","Object","Array","isArray","useTexture","input","textures","useLoader","TextureLoader","values","keys","keyed","forEach","key","assign","indexOf","preload","clear","Galaxy","layers","BACKGROUND_LAYER","galaxyMaterial","texture","args","map","side","BackSide"],"mappings":"yKAGMA,EAAW,SAAAC,GAAG,OAAIA,IAAQC,OAAOD,KAASE,MAAMC,QAAQH,IAAuB,oBAARA,GAC7E,SAASI,EAAWC,GAClB,IAAMC,EAAWC,YAAUC,gBAAeT,EAASM,GAASJ,OAAOQ,OAAOJ,GAASA,GAEnF,GAAIN,EAASM,GAAQ,CACnB,IAAMK,EAAOT,OAAOS,KAAKL,GACnBM,EAAQ,GAId,OAHAD,EAAKE,SAAQ,SAAAC,GAAG,OAAIZ,OAAOa,OAAOH,EAAdV,OAAA,IAAAA,CAAA,GACjBY,EAAMP,EAASI,EAAKK,QAAQF,SAExBF,EAEP,OAAOL,EAIXF,EAAWY,QAAU,SAAAhB,GAAG,OAAIO,IAAUS,QAAQR,gBAAeR,IAG7DI,EAAWa,MAAQ,SAAAZ,GAAK,OAAIE,IAAUU,MAAMT,gBAAeH,K,2DCtB5C,MAA0B,6C,gBCe1Ba,UAVf,YAAgD,IAAD,IAA7BC,cAA6B,MAApBC,IAAoB,EACvCC,EAAiBjB,YAAWkB,GAClC,OACE,uBAAMH,OAAQA,EAAd,UACE,sCAAsBI,KAAM,CAAC,IAAO,GAAI,MACxC,mCAAmBC,IAAKH,EAAgBI,KAAMC","file":"static/js/3.cf2b65ff.chunk.js","sourcesContent":["import { TextureLoader } from 'three';\nimport { useLoader } from '@react-three/fiber';\n\nconst IsObject = url => url === Object(url) && !Array.isArray(url) && typeof url !== 'function';\nfunction useTexture(input) {\n  const textures = useLoader(TextureLoader, IsObject(input) ? Object.values(input) : input);\n\n  if (IsObject(input)) {\n    const keys = Object.keys(input);\n    const keyed = {};\n    keys.forEach(key => Object.assign(keyed, {\n      [key]: textures[keys.indexOf(key)]\n    }));\n    return keyed;\n  } else {\n    return textures;\n  }\n}\n\nuseTexture.preload = url => useLoader.preload(TextureLoader, url); // @ts-expect-error new in r3f 7.0.5\n\n\nuseTexture.clear = input => useLoader.clear(TextureLoader, input);\n\nexport { IsObject, useTexture };\n","export default __webpack_public_path__ + \"static/media/galaxy_starfield.6decc3cc.png\";","import { useTexture } from \"@react-three/drei\";\nimport { BackSide } from \"three\";\nimport texture from \"../assets/textures/galaxy_starfield.png\";\nimport { BACKGROUND_LAYER } from \"../utilities/constants\";\n\nfunction Galaxy({ layers = BACKGROUND_LAYER }) {\n  const galaxyMaterial = useTexture(texture);\n  return (\n    <mesh layers={layers}>\n      <sphereBufferGeometry args={[10000, 48, 48]} />\n      <meshBasicMaterial map={galaxyMaterial} side={BackSide} />\n    </mesh>\n  );\n}\n\nexport default Galaxy;\n"],"sourceRoot":""}